---
import Layout from "@/layouts/Layout.astro";
import IconSvg from "@/components/IconSvg.astro";
---

<Layout title="Sign up">
  <div class="hero min-h-screen container mx-auto">
    <div class="flex flex-row-reverse items-center justify-around">
      <div class="text-center lg:text-left basis-1/2 md:hidden">
        <h1 class="text-4xl font-bold">
          <!-- <Image src={checkSVG} alt="" /> -->
          Sign in to get instant access to thousands of reviews and salary information
        </h1>
        <div class="pb-4 pt-6 flex flex-row gap-2">
          <IconSvg icon="check" />
          <p>View salary to help you negotiate your offer or pay rise</p>
        </div>
        <div class="py-4 flex flex-row gap-2">
          <IconSvg icon="check" />
          <p>Find out about benefits, interview, company culture via reviews</p>
        </div>
        <div class="py-4 flex flex-row gap-2">
          <IconSvg icon="check" />
          <p>Easy apply with only 1 click</p>
        </div>
        <div class="py-4 flex flex-row gap-2">
          <IconSvg icon="check" />
          <p>Manage your own profile & privacy</p>
        </div>
      </div>
      <div class="basis-1/2 max-w-sm">
        <span class="block font-bold">Welcome to TopIT</span>
        <span
          >By signing in, you agree to ITviecâ€™s
          <a class="link link-primary">Terms & Conditions</a> and
          <a class="link link-primary">Privacy Policy</a>
          in relation to your privacy information.</span
        >
        <ul class="steps steps-horizontal mt-3 w-full">
          <li class="step step-primary">Account</li>
          <li class="step">Information</li>
        </ul>
        <div class="card shrink-0 w-full shadow-2xl bg-base-100 mt-4">
          <form class="card-body formStep" id="step1">
            <div class="form-control mb-4">
              <label class="input input-bordered flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 16 16"
                  fill="currentColor"
                  class="w-4 h-4 opacity-70"
                  ><path
                    d="M2.5 3A1.5 1.5 0 0 0 1 4.5v.793c.026.009.051.02.076.032L7.674 8.51c.206.1.446.1.652 0l6.598-3.185A.755.755 0 0 1 15 5.293V4.5A1.5 1.5 0 0 0 13.5 3h-11Z"
                  ></path><path
                    d="M15 6.954 8.978 9.86a2.25 2.25 0 0 1-1.956 0L1 6.954V11.5A1.5 1.5 0 0 0 2.5 13h11a1.5 1.5 0 0 0 1.5-1.5V6.954Z"
                  ></path></svg
                >
                <input
                  type="text"
                  class="grow email"
                  placeholder="Email"
                  required
                />
              </label>
            </div>
            <div class="form-control mb-4">
              <label class="input input-bordered flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 16 16"
                  fill="currentColor"
                  class="w-4 h-4 opacity-70"
                  ><path
                    fill-rule="evenodd"
                    d="M14 6a4 4 0 0 1-4.899 3.899l-1.955 1.955a.5.5 0 0 1-.353.146H5v1.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-2.293a.5.5 0 0 1 .146-.353l3.955-3.955A4 4 0 1 1 14 6Zm-4-2a.75.75 0 0 0 0 1.5.5.5 0 0 1 .5.5.75.75 0 0 0 1.5 0 2 2 0 0 0-2-2Z"
                    clip-rule="evenodd"></path></svg
                >
                <input
                  type="password"
                  class="grow password"
                  placeholder="Password"
                  required
                />
              </label>
            </div>
            <div class="form-control">
              <label class="input input-bordered flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 16 16"
                  fill="currentColor"
                  class="w-4 h-4 opacity-70"
                  ><path
                    fill-rule="evenodd"
                    d="M14 6a4 4 0 0 1-4.899 3.899l-1.955 1.955a.5.5 0 0 1-.353.146H5v1.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-2.293a.5.5 0 0 1 .146-.353l3.955-3.955A4 4 0 1 1 14 6Zm-4-2a.75.75 0 0 0 0 1.5.5.5 0 0 1 .5.5.75.75 0 0 0 1.5 0 2 2 0 0 0-2-2Z"
                    clip-rule="evenodd"></path></svg
                >
                <input
                  type="password"
                  class="grow confirm-password"
                  placeholder="Confirm password"
                  required
                />
              </label>
              <label class="label">
                <a href="#" class="label-text-alt link link-hover"
                  >Forgot password?</a
                >
              </label>
            </div>
            <div class="form-control mt-4">
              <button class="btn btn-primary next">Next</button>
            </div>
          </form>

          <form class="card-body formStep" id="step2">
            <div class="form-control mb-4">
              <label class="input input-bordered flex items-center gap-2">
                <svg
                  class="w-6 h-6 text-gray-800 dark:text-white"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    fill-rule="evenodd"
                    d="M12 4a4 4 0 1 0 0 8 4 4 0 0 0 0-8Zm-2 9a4 4 0 0 0-4 4v1a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-1a4 4 0 0 0-4-4h-4Z"
                    clip-rule="evenodd"></path>
                </svg>
                <input
                  type="text"
                  class="grow username"
                  placeholder="Username"
                  required
                />
              </label>
            </div>
            <div class="form-control mb-4">
              <label class="input input-bordered flex items-center gap-2">
                <svg
                  class="w-6 h-6 text-gray-800 dark:text-white"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    fill-rule="evenodd"
                    d="M12 4a4 4 0 1 0 0 8 4 4 0 0 0 0-8Zm-2 9a4 4 0 0 0-4 4v1a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-1a4 4 0 0 0-4-4h-4Z"
                    clip-rule="evenodd"></path>
                </svg>
                <input
                  type="text"
                  class="grow fullName"
                  placeholder="FullName"
                  required
                />
              </label>
            </div>
            <div class="form-control mb-4">
              <label class="input input-bordered flex items-center gap-2">
                <svg
                  class="w-6 h-6 text-gray-800 dark:text-white"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M7.978 4a2.553 2.553 0 0 0-1.926.877C4.233 6.7 3.699 8.751 4.153 10.814c.44 1.995 1.778 3.893 3.456 5.572 1.68 1.679 3.577 3.018 5.57 3.459 2.062.456 4.115-.073 5.94-1.885a2.556 2.556 0 0 0 .001-3.861l-1.21-1.21a2.689 2.689 0 0 0-3.802 0l-.617.618a.806.806 0 0 1-1.14 0l-1.854-1.855a.807.807 0 0 1 0-1.14l.618-.62a2.692 2.692 0 0 0 0-3.803l-1.21-1.211A2.555 2.555 0 0 0 7.978 4Z"
                  ></path>
                </svg>

                <input
                  type="number"
                  class="grow phone"
                  placeholder="Phone Number"
                  required
                />
              </label>
            </div>
            <div class="form-control mb-4">
              <label class="input input-bordered flex items-center gap-2">
                <svg
                  class="w-6 h-6 text-gray-800 dark:text-white"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    fill-rule="evenodd"
                    d="M7 2a2 2 0 0 0-2 2v1a1 1 0 0 0 0 2v1a1 1 0 0 0 0 2v1a1 1 0 1 0 0 2v1a1 1 0 1 0 0 2v1a1 1 0 1 0 0 2v1a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H7Zm3 8a3 3 0 1 1 6 0 3 3 0 0 1-6 0Zm-1 7a3 3 0 0 1 3-3h2a3 3 0 0 1 3 3 1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1Z"
                    clip-rule="evenodd"></path>
                </svg>

                <input
                  type="text"
                  class="grow address"
                  placeholder="Address"
                  required
                />
              </label>
            </div>
            <div class="form-control mb-4">
              <label class="input input-bordered flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-gender-androgyne"
                  ><path stroke="none" d="M0 0h24v24H0z" fill="none"
                  ></path><path d="M13 11l6 -6"></path><path
                    d="M9 15m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0"></path><path
                    d="M19 9v-4h-4"></path><path d="M16.5 10.5l-3 -3"
                  ></path></svg
                >
                <select
                  class="select w-full"
                  style="border-color: var(--fallback-bc, oklch(var(--bc) / 0.2)); border-inline-color: transparent"
                >
                  <option disabled selected>Gender</option>
                  <option value="true">Nam</option>
                  <option value="false">Ná»¯</option>
                </select>
              </label>
            </div>
            <div class="form-control">
              <label class="input input-bordered flex items-center gap-2">
                <svg
                  class="w-6 h-6 text-gray-800 dark:text-white"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    fill-rule="evenodd"
                    d="M5 5a1 1 0 0 0 1-1 1 1 0 1 1 2 0 1 1 0 0 0 1 1h1a1 1 0 0 0 1-1 1 1 0 1 1 2 0 1 1 0 0 0 1 1h1a1 1 0 0 0 1-1 1 1 0 1 1 2 0 1 1 0 0 0 1 1 2 2 0 0 1 2 2v1a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V7a2 2 0 0 1 2-2ZM3 19v-7a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2Zm6.01-6a1 1 0 1 0-2 0 1 1 0 0 0 2 0Zm2 0a1 1 0 1 1 2 0 1 1 0 0 1-2 0Zm6 0a1 1 0 1 0-2 0 1 1 0 0 0 2 0Zm-10 4a1 1 0 1 1 2 0 1 1 0 0 1-2 0Zm6 0a1 1 0 1 0-2 0 1 1 0 0 0 2 0Zm2 0a1 1 0 1 1 2 0 1 1 0 0 1-2 0Z"
                    clip-rule="evenodd"></path>
                </svg>
                <input type="date" class="grow birthday" />
              </label>
              <label class="label">
                <a href="/login" class="label-text-alt link link-hover">Login</a
                >
              </label>
            </div>
            <div class="form-control mt-4">
              <button class="btn btn-primary prev">Prev</button>
            </div>
            <div class="form-control mt-2">
              <button class="btn btn-primary signup">Signup</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
  <div class="toast toast-signup-warning toast-top toast-end">
    <div class="alert alert-warning">
      <span class="warning-message"></span>
    </div>
  </div>
</Layout>

<script>
  const email = document.querySelector(".email") as HTMLInputElement;
  const password = document.querySelector(".password") as HTMLInputElement;
  const confirm = document.querySelector(
    ".confirm-password",
  ) as HTMLInputElement;
  const username = document.querySelector(".username") as HTMLInputElement;
  const fullName = document.querySelector(".fullName") as HTMLInputElement;
  const phone = document.querySelector(".phone") as HTMLInputElement;
  const gender = document.querySelector("select") as HTMLSelectElement;
  const address = document.querySelector(".address") as HTMLSelectElement;
  const birthday = document.querySelector(".birthday") as HTMLInputElement;

  const next = document.querySelector(".next") as HTMLButtonElement;
  const prev = document.querySelector(".prev") as HTMLButtonElement;
  const signup = document.querySelector(".signup") as HTMLButtonElement;

  const date = new Date();
  const year = date.getFullYear();
  let month: string | number = date.getMonth() + 1;
  let day: string | number = date.getDate();
  if (month < 10) month = "0" + month;
  if (day < 10) day = "0" + day;
  console.log(month, day);
  const today = `${year}-${month}-${day}`;
  birthday.value = today;

  const formStep = document.querySelectorAll(
    ".formStep",
  ) as NodeListOf<HTMLElement>;
  const steps = document.querySelectorAll(".step") as NodeListOf<HTMLElement>;

  let currentStep = 0;

  function updateStepClass(stepIndex: number) {
    steps.forEach((step, index) => {
      if (index <= stepIndex) {
        step.classList.add("step-primary");
      } else {
        step.classList.remove("step-primary");
      }
    });
  }

  function showStep(stepIndex: number) {
    formStep.forEach((step, index) => {
      if (index === stepIndex) {
        step.style.display = "block";
      } else {
        step.style.display = "none";
      }
    });
  }

  updateStepClass(currentStep);
  showStep(currentStep);

  next?.addEventListener("click", (e) => {
    e.preventDefault();
    if (password.value !== confirm.value) {
      warningToast("Nháº­p láº¡i password");
      return false;
    }
    currentStep++;
    updateStepClass(currentStep);
    showStep(currentStep);
  });

  prev.addEventListener("click", (e) => {
    e.preventDefault();
    currentStep--;
    updateStepClass(currentStep);
    showStep(currentStep);
  });

  signup.addEventListener("click", (e) => {
    e.preventDefault();

    console.log(
      JSON.stringify({
        username: username.value,
        fullName: fullName.value,
        email: email.value,
        password: password.value,
        phone_number: Number(phone.value),
        birthday: birthday.value,
        address: address.value,
        gender: Boolean(gender.value),
      }),
    );

    fetch("http://localhost:3000/api/auth-user/signup", {
      method: "post",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        username: username.value,
        password: password.value,
        fullName: fullName.value,
        address: address.value,
        email: email.value,
        phone_number: Number(phone.value),
        birthday: birthday.value,
        gender: Boolean(gender.value),
      }),
    })
      .then((res) => res.json())
      .then((data) => {
        console.log(data);
        if (
          data.statusCode === 400 ||
          data.statusCode === 401 ||
          data.statusCode === 403
        )
          warningToast(data.message);
        else document.location.replace("/login");
      })
      .catch((error) => {
        console.log(error);
      });
  });

  function warningToast(message: string) {
    const toast = document.querySelector(
      ".toast-signup-warning:where(.toast-top)",
    ) as HTMLDivElement;
    const warning = document.querySelector(
      ".warning-message",
    ) as HTMLSpanElement;

    warning.innerHTML = message;
    toast.style.display = "block";
    toast.style.animation = "slideInLeft 1s";

    setTimeout(() => {
      toast.style.animation = "slideInRight 1s";
    }, 2000);

    setTimeout(() => {
      toast.style.display = "none";
    }, 3000);
  }
</script>
