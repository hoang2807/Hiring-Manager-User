---
import Search from "@/components/Search";
import Layout from "@/layouts/Layout.astro";

let id;
let fullName;
let phone;
let email;
let skills;
if (Astro.cookies.has("id")) {
  id = Astro.cookies.get("id")?.value;
  const res = await fetch(`${import.meta.env.BASE_API_URL}/user/${id}`);
  const data = await res.json();
  skills = data.data.skills.split(",");
  fullName = data.data.fullName;
  phone = data.data.phone_number;
  email = data.data.email;
}
---

<Layout title="profile">
  <Search client:idle />
  {
    id ? (
      <form class="bg-[#fff] p-5 w-1/2 mx-auto my-16 flex flex-col gap-4">
        <span class="mt-4">Họ tên</span>
        <input
          type="text"
          placeholder="Type here"
          class="input input-bordered w-full"
          id="name"
          required
          value={fullName}
        />
        <span class="mt-4">Số điện thoại</span>
        <input
          type="text"
          placeholder="Type here"
          class="input input-bordered w-full"
          pattern="[0-9]{3} [0-9]{3} [0-9]{4}"
          maxlength="12"
          id="phone"
          required
          value={phone}
        />
        <span class="pt-4">Email</span>
        <label class="input input-bordered flex items-center gap-2">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 16 16"
            fill="currentColor"
            class="w-4 h-4 opacity-70"
          >
            <>
              <path d="M2.5 3A1.5 1.5 0 0 0 1 4.5v.793c.026.009.051.02.076.032L7.674 8.51c.206.1.446.1.652 0l6.598-3.185A.755.755 0 0 1 15 5.293V4.5A1.5 1.5 0 0 0 13.5 3h-11Z" />
              <path d="M15 6.954 8.978 9.86a2.25 2.25 0 0 1-1.956 0L1 6.954V11.5A1.5 1.5 0 0 0 2.5 13h11a1.5 1.5 0 0 0 1.5-1.5V6.954Z" />
            </>
          </svg>
          <input
            type="text"
            class="grow"
            placeholder="Email"
            id="email"
            value={email}
            disabled
          />
        </label>
        <span class="mt-4">Upload avatar</span>
        <input
          type="file"
          class="file-input file-input-bordered file-input-primary w-full max-w-xs"
          id="avatar"
          accept="image/png, image/jpeg"
        />
        <span class="mt-4">Upload CV</span>
        <input
          type="file"
          class="file-input file-input-bordered file-input-primary w-full max-w-xs"
          id="upload"
          accept="application/pdf"
        />
        <div class="flex gap-3 items-center">
          <input
            type="text"
            placeholder="Skills"
            class="input input-bordered w-full max-w-xs skills"
            id="skills"
          />
          <button
            class="btn btn-circle btn-outline btn-sm"
            type="button"
            id="add-skill"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-6 w-6"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path d="M11 11v-11h1v11h11v1h-11v11h-1v-11h-11v-1h11z" />
            </svg>
          </button>
        </div>
        <div class="flex flex-wrap gap-3 items-center">
          <div class="flex flex-wrap gap-3 items-center" id="list-skill">
            {skills?.map((item: string) => (
              <span class="badge badge-primary badge-outline badge-lg item">
                {item}
              </span>
            ))}
          </div>
          <button
            class="btn btn-circle btn-outline btn-sm"
            type="button"
            id="remove-skill"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-6 w-6"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path d="M0 12v1h23v-1h-23z" />
            </svg>
          </button>
        </div>
        <button class="btn btn-primary" type="submit" id="submit">
          Lưu
        </button>
      </form>
    ) : (
      <>
        <h1 class="mt-2 text-center text-4xl font-bold">Bạn cần đăng nhập</h1>
        <div class="text-center">
          <a class="link link-primary text-lg">Login</a>
        </div>
      </>
    )
  }
  <div class="toast toast-top toast-end">
    <div class="alert alert-success">
      <span>Message sent successfully.</span>
    </div>
  </div>

  <script>
    const name = document.getElementById("name") as HTMLInputElement;
    const phone = document.getElementById("phone") as HTMLInputElement;
    const button = document.getElementById("submit") as HTMLButtonElement;
    const cv = document.getElementById("upload") as HTMLInputElement;
    const avatar = document.getElementById("avatar") as HTMLInputElement;
    const skills = document.getElementById("skills") as HTMLInputElement;
    const addSkill = document.getElementById("add-skill") as HTMLButtonElement;
    const removeSkill = document.getElementById(
      "remove-skill",
    ) as HTMLButtonElement;
    const listSkill = document.getElementById("list-skill") as HTMLDivElement;
    // const item = document.querySelectorAll(
    //   ".item",
    // ) as NodeListOf<HTMLSpanElement>;
    const array: string[] = [];
    function hideRemoveButton() {
      if (!listSkill.lastElementChild) removeSkill.classList.add("hidden");
    }
    hideRemoveButton();

    button.addEventListener("click", (e) => {
      e.preventDefault();

      let file1, file2;
      if (cv.files && cv.files.length > 0) {
        file1 = cv.files[0];
      } else file1 = "";

      if (avatar.files && avatar.files.length > 0) {
        file2 = avatar.files[0];
      } else file2 = "";
      const formData = new FormData();
      formData.append("id", window.sessionStorage.getItem("id") || "");
      formData.append("username", name.value);
      formData.append("phone", phone.value);
      formData.append("avatar", file2);
      formData.append("cv", file1);
      formData.append("skills", array.toString());
      console.log(formData);

      fetch("http://localhost:3000/api/user", {
        method: "put",
        body: formData,
      })
        .then((res) => res.json())
        .then((data) => console.log(data))
        .catch((error) => console.log(error));

      showToast();
    });

    addSkill.addEventListener("click", () => {
      listSkill.innerHTML += `
      <span class="badge badge-primary badge-outline badge-lg item">${skills.value}</span>`;
      array.push(skills.value);
      skills.value = "";
      if (listSkill.childElementCount > 0)
        removeSkill.classList.remove("hidden");
    });

    removeSkill.addEventListener("click", () => {
      if (listSkill.lastElementChild) {
        listSkill.removeChild(listSkill.lastElementChild);
        hideRemoveButton();
      }
    });

    function showToast() {
      const toast = document.querySelector(
        ".toast:where(.toast-top)",
      ) as HTMLInputElement;
      toast.style.display = "block";
      toast.style.animation = "slideInLeft 1s";

      setTimeout(() => {
        toast.style.animation = "slideInRight 1s";
      }, 2000);

      setTimeout(() => {
        toast.style.display = "none";
      }, 3000);
    }
  </script>
</Layout>
